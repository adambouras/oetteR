% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_train.R
\name{make_container_for_function_calls}
\alias{make_container_for_function_calls}
\title{container for function calls, can be used as a progress bar}
\usage{
make_container_for_function_calls()
}
\value{
container
}
\description{
creates a closure with a make_call() method that wraps
any function call. When the wrapper is used the function call is saved
and the calls are counted and the progress is being printed. Use the method
set_total() to input the total number of function calls. Based on the total
an ETA is estimated and a percentage calculated.
}
\details{
DETAILS
}
\examples{

.f = randomForest::randomForest
call_cont = make_container_for_function_calls()
call_cont$set_total(4)
m_wr = call_cont$make_call( .f = .f, formula = disp~., data = mtcars )

#pipe version
call_cont = make_container_for_function_calls()
call_cont$set_total(5)

pl = pipelearner::pipelearner(mtcars) \%>\%
  pipelearner::learn_models( models = c( call_cont$make_call )
                             , formulas = c(disp~.)
                             , .f = c( randomForest::randomForest )
                             , function_name = 'randomForest'
                             , print_call = c(T)
                           ) \%>\%
  pipelearner::learn_cvpairs( pipelearner::crossv_kfold, k = 5 ) \%>\%
  pipelearner::learn()

}
\seealso{
\code{\link[lubridate]{now}},\code{\link[lubridate]{time_length}}
}
