% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_plot.R
\name{f_plot_hist}
\alias{f_plot_hist}
\title{Plot Histograms}
\usage{
f_plot_hist(variable, data_ls, group = "None", graph_type = c("violin",
  "bar", "line"), y_axis = c("count", "density"), auto_range = T,
  n_breaks = 30, x_min = 0, x_max = 100)
}
\arguments{
\item{variable}{character vector naming the variable to be plotted}

\item{data_ls}{data_ls object generated by f_clean_data(), or a named list
list( data = <dataframe>, numericals = < vector with column names of
numerical columns>)}

\item{group}{character vector naming the column to be used as grouping variable, Default: NULL}

\item{graph_type}{one of c("violin", "bar", "line"), Default: 'violin'}

\item{y_axis}{one of c("count", "density"), Default: c("count", "density")}

\item{auto_range}{boolean, Default: T}

\item{n_breaks}{integer , Default: 30}

\item{x_min}{double, requires aut_range == F, Default: 0}

\item{x_max}{double, requires aut_range == F,  Default: 100}
}
\value{
plot object
}
\description{
Function plots smart histograms for variables in a data_ls list
 generated by f_clean_data(). It supports three types of histograms: Bar
 histograms, density histograms and violin plots. We can further specify a
 categorical variable to group on. The function defaults to a sensible
 standard output if key word arguments are not applicable for variable type.
 Thus we can easily pipe through long lists of variables and thus generate
 histograms for all variables in the input (see examples).
}
\details{
DETAILS
}
\examples{
\dontrun{
#'
#plot single variable
data_ls = f_clean_data(mtcars)
f_plot_hist('disp', data_ls)
f_plot_hist('disp', data_ls, graph_type = 'violin', group = 'cyl')

#plot all variables
vars = c(data_ls$categorical, data_ls$numericals) \%>\%
 walk( f_plot_hist, data_ls, group = 'cyl')
}
}
